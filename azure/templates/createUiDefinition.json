{
	"handler": "Microsoft.Compute.MultiVm",
	"version": "0.1.2-preview",
	"parameters": {
		"basics": [
			{
				"name": "swarmName",
				"type": "Microsoft.Common.TextBox",
				"label": "Swarm Name",
				"defaultValue": "dockerswarm",
				"toolTip": "Defines how the swarm resources should be named.",
				"constraints": {
					"required": true,
					"regex": "^[a-z0-9A-Z]{1,12}$",
					"validationMessage": "Only alphanumeric characters are allowed, and the value must be 1-10 characters long."
				},
				"visible": true
			},
			{
				"name": "adServicePrincipalAppID",
				"type": "Microsoft.Common.TextBox",
				"label": "Service Principal App ID",
				"defaultValue": "",
				"toolTip": "This is the Active Directory Service Principal ID. This is a GUID.",
				"constraints": {
					"required": true,
					"regex": "^[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}$",
					"validationMessage": "Only GUID is allowed."
				},
				"visible": true
			},
			{
				"name": "adServicePrincipalAppSecret",
				"type": "Microsoft.Common.PasswordBox",
				"label": {
					"password": "Service Principal App Secret",
					"confirmPassword": "Confirm password"
				},
				"toolTip": "AD ServicePrincipal App Secret",
				"constraints": {
					"required": true,
					"regex": "",
					"validationMessage": ""
				},
				"options": {
					"hideConfirmation": true
				},
				"visible": true
			},
			{
				"name": "sshPublicKey",
				"type": "Microsoft.Compute.CredentialsCombo",
				"label": {
					"authenticationType": "Authentication type",
					"sshPublicKey": "SSH public key",
					"password": "Password",
					"confirmPassword": "Confirm password"
				},
				"toolTip": {
					"sshPublicKey": "The SSH public key used to authenticate with the created swarm. Your key should look something like 'ssh-rsa AAAAB...UcyupgH azureuser@linuxvm'",
					"password": "",
					"authenticationType": ""
				},
				"constraints": {
					"required": true
				},
				"options": {
					"hidePassword": true
				},
				"osPlatform": "Linux",
				"visible": true
			}
		],
		"steps": [
			{
				"name": "dockerSettings",
				"label": "Docker Enterprise Edition Settings",
				"subLabel": {
					"preValidation": "Configure cluster",
					"postValidation": "Done"
				},
				"bladeTitle": "Docker Enterprise Edition Settings",
				"elements": [
					{
						"name": "ddcUsername",
						"type": "Microsoft.Compute.UserNameTextBox",
						"label": "Docker Enterprise Edition Username",
						"defaultValue": "ddcadmin",
						"toolTip": "The name of the admin user for Docker EE Manager, Compute, and DTR Nodes.",
						"constraints": {
							"required": true
						},
						"osPlatform": "Linux",
						"visible": true
					},
					{
						"name": "ddcPassword",
						"type": "Microsoft.Common.PasswordBox",
						"label": {
							"password": "Docker Enterprise Edition Password",
							"confirmPassword": "Confirm Docker Enterprise Edition password"
						},
						"toolTip": "Password for Docker for Docker EE Manager, Compute, and DTR Nodes.",
						"constraints": {
							"required": true,
							"regex": "^[=!@#$%&<>_.+a-zA-Z0-9-]{8,40}$",
							"validationMessage": "The admin password must be between 2 and 35 characters and can contain any combination of alphanumeric or the following special characters !#$%&-_+=<>"
						},
						"options": {
							"hideConfirmation": false
						},
						"visible": true
					},
					{
						"name": "ddcLicense",
						"type": "Microsoft.Common.TextBox",
						"label": "Docker Enterprise Edition License",
						"toolTip": "Please add your Docker Enterprise Edition License. You can retrieve your license from Docker Store (https://store.docker.com/).",
						"constraints": {
							"required": true,
							"validationMessage": "You must enter Docker Enterprise Edition License"
						},
						"visible": true
					},
					{
						"name": "enableSystemPrune",
						"type": "Microsoft.Common.OptionsGroup",
						"label": "Enable System Prune",
						"defaultValue": "no",
						"toolTip": "Cleans up unused images, containers, networks and volumes",
						"constraints": {
							"allowedValues": [
								{
									"label": "yes",
									"value": "yes"
								},
								{
									"label": "no",
									"value": "no"
								}
							]
						},
						"visible": true
					},
					{
						"name": "managerCount",
						"type": "Microsoft.Common.DropDown",
						"label": "Number of Manager Nodes",
						"defaultValue": "1",
						"toolTip": "The number of Manager nodes to provision. Available values are 1, 3 or 5",
						"constraints": {
							"allowedValues": [
								{
									"label": "1",
									"value": "1"
								},
								{
									"label": "3",
									"value": "3"
								},
								{
									"label": "5",
									"value": "5"
								}
							]
						},
						"visible": true
					},
					{
						"name": "managerVMSize",
						"type": "Microsoft.Compute.SizeSelector",
						"label": "Manager VM Size",
						"toolTip": "The size of the created Manager machines. Recommended sizes are 4 cores minimum",
						"recommendedSizes": [
							"Standard_DS3",
							"Standard_D3_v2",
							"Standard_DS12"
						],
						"constraints": {
							"allowedSizes": [
								"Standard_A0",
								"Standard_A1",
								"Standard_A2",
								"Standard_A3",
								"Standard_A4",
								"Standard_A5",
								"Standard_A6",
								"Standard_A7",
								"Standard_A8",
								"Standard_A9",
								"Standard_A10",
								"Standard_A11",
								"Standard_D1",
								"Standard_D2",
								"Standard_D3",
								"Standard_D4",
								"Standard_D11",
								"Standard_D12",
								"Standard_D13",
								"Standard_D14",
								"Standard_D1_v2",
								"Standard_D2_v2",
								"Standard_D3_v2",
								"Standard_D4_v2",
								"Standard_D5_v2",
								"Standard_D11_v2",
								"Standard_D12_v2",
								"Standard_D13_v2",
								"Standard_D14_v2",
								"Standard_G1",
								"Standard_G2",
								"Standard_G3",
								"Standard_G4",
								"Standard_G5",
								"Standard_DS1",
								"Standard_DS2",
								"Standard_DS3",
								"Standard_DS4",
								"Standard_DS11",
								"Standard_DS12",
								"Standard_DS13",
								"Standard_DS14",
								"Standard_GS1",
								"Standard_GS2",
								"Standard_GS3",
								"Standard_GS4",
								"Standard_GS5"
							]
						},
						"osPlatform": "Linux",
						"imageReference": {
							"publisher": "docker",
							"offer": "docker-ee",
							"sku": "docker-ee"
						},
						"count": "[steps('dockerSettings').managerCount]",
						"visible": true
					},
					{
						"name": "workerCount",
						"type": "Microsoft.Common.DropDown",
						"label": "Number of Worker Nodes",
						"defaultValue": "1",
						"toolTip": "The number of Worker nodes to provision. Available values are 1-15.",
						"constraints": {
							"allowedValues": [
								{
									"label": "1",
									"value": "1"
								},
								{
									"label": "2",
									"value": "2"
								},
								{
									"label": "3",
									"value": "3"
								},
								{
									"label": "4",
									"value": "4"
								},
								{
									"label": "5",
									"value": "5"
								},
								{
									"label": "6",
									"value": "6"
								},
								{
									"label": "7",
									"value": "7"
								},
								{
									"label": "8",
									"value": "8"
								},
								{
									"label": "9",
									"value": "9"
								},
								{
									"label": "10",
									"value": "10"
								},
								{
									"label": "11",
									"value": "11"
								},
								{
									"label": "12",
									"value": "12"
								},
								{
									"label": "13",
									"value": "13"
								},
								{
									"label": "14",
									"value": "14"
								},
								{
									"label": "15",
									"value": "15"
								}
							]
						}
					},
					{
						"name": "workerVMSize",
						"type": "Microsoft.Compute.SizeSelector",
						"label": "Worker VM Size",
						"toolTip": "The size of the created Worker machines",
						"recommendedSizes": [
							"Standard_D2_v2",
							"Standard_D2",
							"Standard_DS2"
						],
						"constraints": {
							"allowedSizes": [
								"Standard_A0",
								"Standard_A1",
								"Standard_A2",
								"Standard_A3",
								"Standard_A4",
								"Standard_A5",
								"Standard_A6",
								"Standard_A7",
								"Standard_A8",
								"Standard_A9",
								"Standard_A10",
								"Standard_A11",
								"Standard_D1",
								"Standard_D2",
								"Standard_D3",
								"Standard_D4",
								"Standard_D11",
								"Standard_D12",
								"Standard_D13",
								"Standard_D14",
								"Standard_D1_v2",
								"Standard_D2_v2",
								"Standard_D3_v2",
								"Standard_D4_v2",
								"Standard_D5_v2",
								"Standard_D11_v2",
								"Standard_D12_v2",
								"Standard_D13_v2",
								"Standard_D14_v2",
								"Standard_G1",
								"Standard_G2",
								"Standard_G3",
								"Standard_G4",
								"Standard_G5",
								"Standard_DS1",
								"Standard_DS2",
								"Standard_DS3",
								"Standard_DS4",
								"Standard_DS11",
								"Standard_DS12",
								"Standard_DS13",
								"Standard_DS14",
								"Standard_GS1",
								"Standard_GS2",
								"Standard_GS3",
								"Standard_GS4",
								"Standard_GS5"
							]
						},
						"osPlatform": "Linux",
						"imageReference": {
							"publisher": "docker",
							"offer": "docker-ee",
							"sku": "docker-ee"
						},
						"count": "[steps('dockerSettings').workerCount]",
						"visible": true
					}
				]
			}
		],
		"outputs": {
			"swarmName": "[basics('swarmName')]",
			"sshPublicKey": "[basics('sshPublicKey').sshPublicKey]",
			"adServicePrincipalAppID": "[basics('adServicePrincipalAppID')]",
			"adServicePrincipalAppSecret": "[basics('adServicePrincipalAppSecret')]",
			"enableSystemPrune": "[steps('dockerSettings').enableSystemPrune]",
			"managerCount": "[int(steps('dockerSettings').managerCount)]",
			"managerVMSize": "[steps('dockerSettings').managerVMSize]",
			"workerCount": "[int(steps('dockerSettings').workerCount)]",
			"workerVMSize": "[steps('dockerSettings').workerVMSize]",
			"ddcUsername": "[steps('dockerSettings').ddcUsername]",
			"ddcPassword": "[steps('dockerSettings').ddcPassword]",
			"ddcLicense": "[steps('dockerSettings').ddcLicense]"
		}
	}
}