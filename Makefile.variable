ifeq ($(EDITIONS_TAG),)
	EDITIONS_TAG := ce-rc2
endif

ifeq ($(EDITIONS_DOCKER_VERSION),)
	EDITIONS_DOCKER_VERSION := 17.09.0
endif

ifeq ($(FORCE),)
	FORCE := false
endif

ifeq ($(RELEASE),)
	RELEASE := false
endif

ifeq ($(RELEASE),false)
	SHORT := $(shell git rev-parse --short HEAD)
	EDITIONS_TAG := $(EDITIONS_TAG)-$(SHORT)
	ifdef JENKINS_BUILD
		# If not a release in Jenkins then use the head of docker/editions.moby
		MOBY_COMMIT := $(shell docker run --rm docker4x/mobyhead@sha256:823149afe4b4f2ee7ac45c7963193ae2274cb216760fb98631a3109aff05e4af)
	else
		EDITIONS_TAG := $(EDITIONS_TAG)-dev
	endif
endif

### MOBY COMMIT
# Check if MOBY_COMMIT has been defined via env
ifeq ($(MOBY_COMMIT),)
ifeq ($(EE),yes)
	MOBY_COMMIT := eade98cbea46d9e834ab359dc5386a7d2d248ea3
	DOCKER_RELEASE_BUILD := ee-17.06-64
else
	MOBY_COMMIT := 64f481ac4d0da244ba8dbcd27a0c72de262dbb1a
	DOCKER_RELEASE_BUILD := ce-17.09-17
endif
endif

### STATIC DOCKER
DOCKER_BIN_URL := http://docker-ci-artifacts.s3.amazonaws.com/ci.qa.aws.dckr.io/jenkins-docker-release-packaging-$(DOCKER_RELEASE_BUILD)/docker-amd64.tgz

# Check if DOCKER_VERSION has been set
ifeq ($(DOCKER_VERSION),)
	DOCKER_VERSION := $(EDITIONS_DOCKER_VERSION)-$(EDITIONS_TAG)
endif

ifeq ($(DOCKER_PUSH),)
	DOCKER_PUSH := false
endif

# Push final image output to S3 bucket
ifeq ($(PUSH_BUILD_TO_S3),)
	PUSH_BUILD_TO_S3 := false
endif

# By default don't load all Docker Images into the AMI (shell is still loaded)
ifeq ($(LOAD_IMAGES),)
	LOAD_IMAGES := false
endif

# Check if CHANNEL has been defined
ifeq ($(CHANNEL),)
	CHANNEL := test
endif

# Check if DOCKER_EXPERIMENTAL has been defined
ifeq ($(DOCKER_EXPERIMENTAL),)
	DOCKER_EXPERIMENTAL := false
endif

# Check if BUILD has been defined
ifeq ($(BUILD),)
	BUILD := 1
endif

## Jenkins ENV
ifeq ($(JENKINS_BUILD),)
	BUILD_NUMBER ?= manual-$(shell date +"%s")
	BUILD_TAG ?= jenkins-editions-$(BUILD_NUMBER)
endif

# Use our edition commit
ifeq ($(EDITIONS_COMMIT),)
	EDITIONS_COMMIT := $(shell git rev-parse --verify HEAD)
endif

ifeq ($(shell echo ${DOCKER_VERSION} | sed -ne '/-ee/p'), $(DOCKER_VERSION))
	MOBY_IMG_NAME := mobylinux-ee.tgz
	AMI_OUT := ami_id_ee.log
	AMI_SRC_REGION := us-east-1
	LOAD_IMAGES := true
	VHD_OUT := vhd_ee_blob_url.log
	BDI_OUT := bdi_ee_url.log
	AZURE_STG_ACCOUNT_NAME := csedition
	EE := yes
	MAKE_AMI_PUBLIC := no
else
	MOBY_IMG_NAME := mobylinux-ce.tgz
	AMI_OUT := ami_id.log
	AMI_SRC_REGION := us-west-2
	VHD_OUT := vhd_blob_url.log
	BDI_OUT := bdi_url.log
	AZURE_STG_ACCOUNT_NAME := testeditions
	EE := no
	MAKE_AMI_PUBLIC := no
	ifeq ($(RELEASE),true)
		MAKE_AMI_PUBLIC = yes
	endif
endif

NAMESPACE := docker4x
AWS_TAG_VERSION := $(DOCKER_VERSION)-aws$(BUILD)
AZURE_TAG_VERSION := $(DOCKER_VERSION)-azure$(BUILD)
GCP_TAG_VERSION := $(DOCKER_VERSION)-gcp$(BUILD)
ORACLE_TAG_VERSION := $(DOCKER_VERSION)-oracle$(BUILD)

AWS_SHELL := $(NAMESPACE)/shell-aws:${AWS_TAG_VERSION}
AZURE_SHELL := $(NAMESPACE)/agent-azure:${AZURE_TAG_VERSION}
ORACLE_SHELL := $(NAMESPACE)/shell-oracle:${ORACLE_TAG_VERSION}

REGION := us-west-2
EDITION_ADDON := base

#### AWS Specific VARS
ACCOUNT_LIST_FILE_URL := https://s3.amazonaws.com/docker-for-aws/data/accounts.txt
DOCKER_AWS_ACCOUNT_URL := https://s3.amazonaws.com/docker-for-aws/data/docker_accounts.txt
AWS_AMI_LIST := https://s3.amazonaws.com/docker-for-aws/data/ami/$(DOCKER_VERSION)/ami_list.json

#### Azure Specific VARS
CONTAINER_NAME := mobylinux

# stage offer will have the -preview 
VHD_OFFER_ID := docker-ce
VHD_SKU := docker-ce
VHD_VERSION := 1.0.12
ifeq ($(CHANNEL),edge)
 VHD_OFFER_ID := docker-ce-edge
 VHD_SKU := docker-ce-edge
 VHD_VERSION := 1.0.4
endif

EE_OFFER_ID := docker-ee
EE_VHD_SKU := docker-ee
EE_VHD_VERSION := 1.0.9


#### GCP Specific VARS
GCP_BUILD_NUMBER := 3

ifeq ($(ROOT_DIR),)
	ROOT_DIR := ${CURDIR}
endif

AZURE_TARGET_PATH := dist/azure/$(CHANNEL)/$(AZURE_TAG_VERSION)
AZURE_TARGET_TEMPLATE := $(AZURE_TARGET_PATH)/Docker.tmpl
AWS_TARGET_PATH := dist/aws/$(CHANNEL)/$(AWS_TAG_VERSION)
AWS_TARGET_TEMPLATE := $(AWS_TARGET_PATH)/Docker.tmpl
GCP_TARGET_PATH := dist/gcp/$(CHANNEL)/$(GCP_TAG_VERSION)
ORACLE_TARGET_PATH := dist/oracle/$(CHANNEL)/$(ORACLE_TAG_VERSION)

### DDC VARS
UCP_TAG := 2.2.2
DTR_TAG := 2.3.2

### COMPOSE
COMPOSE_VERSION := 1.15.0



export