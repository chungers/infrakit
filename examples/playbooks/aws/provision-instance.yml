{{/* Input to create instance using the AWS instance plugin */}}
{{/* =% instanceProvision `aws/ec2-instance` %= */}}

{{ $user := param "user" "string" "username" | prompt "Please enter your user name:" "string" (env "USER")}}
{{ $project := param "project" "string" "project" | prompt "Project?" "string" "myproject" }}
{{ $imageId := param "image-id" "string" "Image ID" | prompt "AMI?" "string" "ami-df8406b0" }}
{{ $instanceType := param "instance-type" "string" "instance type" | prompt "Instance type?" "string" "t2.micro" }}

{{ $name := param "name" "string" "Host name" | prompt "Host name?" "string" (cat $project `-` (randAlphaNum 8) | nospace ) }}

{{ $keyName := param "key" "string" "ssh key name" | prompt "SSH key?" "string" "infrakit"}}

{{ $subnet := param "subnet" "string" "subnet" | prompt "Subnet?" "string" "subnet1" }}
{{ $subnetKey := list `inventory` $project `networking/aws/ec2-subnet` (list $project $subnet | join `-`) `Properties` | join `/` }}

{{ $azKey := list $subnetKey `AvailabilityZone` | join `/` }}
{{ $az := metadata $azKey }}

{{ $subnetIdKey := list $subnetKey `SubnetId` | join `/` }}
{{ $subnetId := metadata $subnetIdKey }}

{{ $cidrBlockKey := list $subnetKey `CidrBlock` | join `/` }}
{{ $privateIp := param "private-ip" "string" "IP" | prompt "Private IP address?" "string" (metadata $cidrBlockKey) }}

{{ $securityGroupIdKey := list `inventory` $project `networking/aws/ec2-securitygroup` (list $project `sg1` | join `-`) `Properties/GroupId` | join `/` }}

{{ $securityGroupID := param "security-group-id" "string" "security group id" | prompt "Security group ID?" "string" (metadata $securityGroupIdKey) }}

Tags:
  infrakit_scope: {{ $project }}
  infrakit_created: {{ now | htmlDate }}
  infrakit_user: {{ $user }}

Init: |
  #!/bin/bash
  sudo add-apt-repository ppa:gophers/archive
  sudo apt-get update -y
  sudo apt-get install -y wget curl git golang-1.9-go
  wget -qO- https://get.docker.com | sh
  ln -s /usr/lib/go-1.9/bin/go /usr/local/bin/go

Properties:
  Tags:
    Name: {{ $name }}
    infrakit_user: {{ $user }}
  RunInstancesInput:
    BlockDeviceMappings: null
    DisableApiTermination: null
    EbsOptimized: null
    IamInstanceProfile: null
    ImageId: {{ $imageId }}
    InstanceInitiatedShutdownBehavior: null
    InstanceType: {{ $instanceType }}
    KeyName: {{ $keyName }}
    NetworkInterfaces:
    - AssociatePublicIpAddress: true
      PrivateIpAddress: {{ $privateIp }}
      DeleteOnTermination: true
      DeviceIndex: 0
      Groups:
      - {{ $securityGroupID }}
      NetworkInterfaceId: null
      SubnetId: {{ $subnetId }}
    Placement:
      Affinity: null
      AvailabilityZone: {{ $az }}
      Tenancy: null
    RamdiskId: null
    SubnetId: null
    UserData: null
