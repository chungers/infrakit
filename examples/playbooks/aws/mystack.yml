{{/* =% text %= */}}

{{ $user := param "user" "string" "username" | prompt "Please enter your user name:" "string" (env "USER")}}
{{ $project := param "project" "string" "project" | prompt "Project?" "string" "myproject" }}

{{ $cidr := param "cidr" "string" "CIDR Block" | prompt "CIDR block?" "string" "10.0.0.0/16" }}
{{ $cidrSubnet1 := param "cidrSubnet1" "string" "CIDR Block for subnet1" | prompt "CIDR block?" "string" "10.0.100.0/24" }}
{{ $cidrSubnet2 := param "cidrSubnet2" "string" "CIDR Block for subnet2" | prompt "CIDR block?" "string" "10.0.200.0/24" }}

{{ $azSubnet1 := param "azSubnet1" "string" "AZ Subnet1" | prompt "Availability Zone?" "string" "eu-central-1a" }}
{{ $azSubnet2 := param "azSubnet2" "string" "AZ Subnet2" | prompt "Availability Zone?" "string" "eu-central-1b" }}

kind: resource
metadata:
  name: {{ $project }}
options:
  ObserveInterval: 30s
properties:

  # The VPC
  vpc:
    plugin: aws/ec2-vpc
    labels:
      Name: {{ $project }}-vpc
      infrakit_scope: {{ $project }}
      infrakit_created: {{ now | htmlDate }}
      infrakit_user: {{ $user }}
    Properties:
      CreateVpcInput:
        CidrBlock: {{ $cidr }}
      ModifyVpcAttributeInputs:
        - EnableDnsSupport:
            Value: true
        - EnableDnsHostnames:
            Value: true

  # Internet Gateway
  igw:
    plugin: aws/ec2-internetgateway
    labels:
      Name: {{ $project }}-igw
      infrakit_scope: {{ $project }}
      infrakit_created: {{ now | htmlDate }}
      infrakit_user: {{ $user }}
    Properties:
      AttachInternetGatewayInput:
        VpcId : {{ depend `vpc/Properties/VpcId` }}

  # The main routetable
  rtb:
    plugin: aws/ec2-routetable
    labels:
      Name: {{ $project }}-rtb
      infrakit_scope: {{ $project }}
      infrakit_created: {{ now | htmlDate }}
      infrakit_user: {{ $user }}
    Properties:
      CreateRouteTableInput:
        VpcId : {{ depend `vpc/Properties/VpcId` }}
      CreateRouteInputs:
        - GatewayId: {{ depend `igw/Properties/InternetGatewayId` }}
          DestinationCidrBlock: "0.0.0.0/0"

  # Subnet 1 in az1
  subnet1:
    plugin: aws/ec2-subnet
    labels:
      Name: {{ $project }}-subnet1
      infrakit_scope: {{ $project }}
      infrakit_created: {{ now | htmlDate }}
      infrakit_user: {{ $user }}
    Properties:
      CreateSubnetInput:
        VpcId : {{ depend `vpc/Properties/VpcId` }}
        AvailabilityZone: {{ $azSubnet1 }}
        CidrBlock: {{ $cidrSubnet1 }}
      RouteTableAssociation:
        RouteTableId: {{ depend `rtb/Properties/RouteTableId` }}

  # Subnet 2 in az2
  subnet2:
    plugin: aws/ec2-subnet
    labels:
      Name: {{ $project }}-subnet2
      infrakit_scope: {{ $project }}
      infrakit_created: {{ now | htmlDate }}
      infrakit_user: {{ $user }}
    Properties:
      CreateSubnetInput:
        VpcId : {{ depend `vpc/Properties/VpcId` }}
        AvailabilityZone: {{ $azSubnet2 }}
        CidrBlock: {{ $cidrSubnet2 }}
      RouteTableAssociation:
        RouteTableId: {{ depend `rtb/Properties/RouteTableId` }}

  # Security Groups
  sg1:
    plugin: aws/ec2-securitygroup
    labels:
      Name: {{ $project }}-sg1
      infrakit_scope: {{ $project }}
      infrakit_created: {{ now | htmlDate }}
      infrakit_user: {{ $user }}
    Properties:
      CreateSecurityGroupInput:
        VpcId : {{ depend `vpc/Properties/VpcId` }}
        GroupName: {{ $project }}-sg1
        Description: basic-sg
      AuthorizeSecurityGroupIngressInput:
        - CidrIp : 0.0.0.0/0
          IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
        - CidrIp : 0.0.0.0/0
          IpProtocol: "tcp"
          FromPort: 24864
          ToPort: 24864
