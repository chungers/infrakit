{{/* =% controllerCommit %= */}}

{{ $project := metadata `mystack/vars/project` }}

{{ $instanceType := param "instance-type" "string" "instance type" | prompt "Instance type?" "string" "t2.micro" }}
{{ $imageId := param "image-id" "string" "Image ID" | prompt "AMI?" "string" "ami-7c412f13" }}
{{ $keyName := param "key" "string" "ssh key name" | prompt "SSH key?" "string" "infrakit"}}
{{ $spotPrice := param "spot-price" "string" "Spot price" | prompt "Spot price?" "string" "0.03" }}

{{ $subnetId := param "subnet-id" "string" "subnet ID" | prompt "Subnet?" "string" "" }}
{{ $az := param "az" "string" "availability zone" | prompt "AZ?" "string" "" }}
{{ $securityGroupID := param "security-group-id" "string" "security group" | prompt "Security group ID?" "string" "" }}

{{ $count := param "count" "int" "Count" | prompt "How many?" "int" 6 }}
{{ $parallelism := param "parallelism" "int" "Parallelism" | prompt "How many at a time?" "int" 2 }}

kind: pool
metadata:
  name: {{ $project }}-nodes
options:
  ObserveInterval: 10s
  # This is the size of the buffered channel for the finite state machine work queue -- needs to be at least the count.
  BufferSize: {{ mul $count 10 | add 1024 }} # controls the fsm engine's queue capacity
  # observation's inbound channel capacity -- needs to be at least the same as the number of resource objects.
  ChannelBufferSize: {{ mul $count 10 | add 1024 }}
  # How long to wait before we start the provision process, in unit of time (ticks)
  WaitBeforeProvision: 3
  # How long to wait before we start the termination / destroy, in unit of time (ticks)
  WaitBeforeDestroy: 3

properties:
  plugin: aws/ec2-spot-instance
  count: {{ $count }}   # how many in the pool
  parallelism: {{ $parallelism }}  # how many to provision / destroy at a time
  select:
    az: az1
    type: compute
  tags:
    node_label: test
  init: |
      #!/bin/bash
      sudo add-apt-repository ppa:gophers/archive
      sudo apt-get update -y
      # install golang
      sudo apt-get install -y wget curl git golang-1.10-go
      ln -s /usr/lib/go-1.10/bin/go /usr/local/bin/go
      # install docker CE
      curl -sSL https://get.docker.com | sh
      # install infrakit
      curl -sSL https://docker.github.io/infrakit/install | sh
  properties:
    RequestSpotInstancesInput:
      SpotPrice: "{{ $spotPrice }}"
      Type: one-time
      LaunchSpecification:
        ImageId: {{ $imageId }}
        InstanceType: {{ $instanceType }}
        KeyName: {{ $keyName }}
        NetworkInterfaces:
          - AssociatePublicIpAddress: true
            DeleteOnTermination: true
            DeviceIndex: 0
            Groups:
              - {{ $securityGroupID }}
            SubnetId: {{ $subnetId }}
        Placement:
          AvailabilityZone: {{ $az }}
